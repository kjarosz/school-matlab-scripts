function simplified_params = single_phase_simplified_equivalent_circuit(slip, circuit_params)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here
fprintf("Simplified params: \n")

fprintf("Z1 = R1 + i*X1\n")
fprintf("= %.2f + i*%.2f\n", circuit_params.R1, circuit_params.X1)

% Calculations for Zf
fprintf("Zf = j*0.5*Xmag || (0.5*R2'/s + j*0.5*X2')\n")
fprintf("= j*0.5*%.2f || (0.5*%.2f/%.2f + j*0.5*%.2f)\n", ...
    circuit_params.Xmag, ...
    circuit_params.R2prime, ...
    slip, ...
    circuit_params.X2prime)

half_Xmag = 0.5*circuit_params.Xmag;
half_R2f = 0.5*circuit_params.R2prime/slip;
half_X2 = 0.5*circuit_params.X2prime;

fprintf("= j*%.2f || %.2f + i*%.2f\n", ...
    half_Xmag, ...
    half_R2f, ...
    half_X2)

fprintf("= j%.2f (%.2f + j%.2f) / (j%.2f + %.2f + j%.2f)\n", ...
    half_Xmag, ...
    half_R2f, ...
    half_X2, ...
    half_Xmag, ...
    half_R2f, ...
    half_X2 ...
    )

% Calculations for Zb
fprintf("Zb = j*0.5*Xmag || (0.5*R2'/(2 - s) + j*0.5*X2')\n")
fprintf("= j*0.5*%.2f || (0.5*%.2f/%.2f + j*0.5*%.2f)\n", ...
    circuit_params.Xmag, ...
    circuit_params.R2prime, ...
    slip, ...
    circuit_params.X2prime)

half_Xmag = 0.5*circuit_params.Xmag;
half_R2b = 0.5*circuit_params.R2prime/(2 - slip);
half_X2 = 0.5*circuit_params.X2prime;

fprintf("= j*%.2f || %.2f + i*%.2f\n", ...
    half_Xmag, ...
    half_R2b, ...
    half_X2)

fprintf("= j%.2f (%.2f + j%.2f) / (j%.2f + %.2f + j%.2f)\n", ...
    half_Xmag, ...
    half_R2b, ...
    half_X2, ...
    half_Xmag, ...
    half_R2b, ...
    half_X2 ...
    )

% Results
simplified_params = struct(...
    "Z1", circuit_params.R1 + 1i*circuit_params.X1, ...
    "Zf", parallel_impedance([1i*half_Xmag (half_R2f + 1i*half_X2)]), ...
    "Zb", parallel_impedance([1i*half_Xmag (half_R2b + 1i*half_X2)]) ...
    );
end

